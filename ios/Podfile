# Uncomment this line to define a global platform for your project
platform :ios, '12.1'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  pod 'Firebase/Analytics', :modular_headers => true
  pod 'Firebase/Auth', :modular_headers => true
  pod 'Firebase/Core', :modular_headers => true
  pod 'Firebase/Firestore', :modular_headers => true

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

# 안전한 post_install 훅 코드
post_install do |installer|
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      # 기본 설정 파일 경로 초기화
      begin
        if config.name == 'Release'
          config.base_configuration_reference = nil
          config.base_configuration_reference = installer.sandbox.root + 'Target Support Files/Pods-Runner/Pods-Runner.release.xcconfig'
        elsif config.name == 'Debug'
          config.base_configuration_reference = nil
          config.base_configuration_reference = installer.sandbox.root + 'Target Support Files/Pods-Runner/Pods-Runner.debug.xcconfig'
        end
      rescue => e
        puts "Error setting base configuration: #{e.message}"
      end

      # iOS 타겟 버전 및 Swift 최적화 설정
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'
      config.build_settings['SWIFT_OPTIMIZATION_LEVEL'] = '-Onone'
    end

    # input/output 파일 목록 비우기
    target.build_phases.each do |phase|
      if phase.respond_to?(:input_file_list_paths) && phase.respond_to?(:output_file_list_paths)
        phase.input_file_list_paths = []
        phase.output_file_list_paths = []
      end
    end

    flutter_additional_ios_build_settings(target)

    # BoringSSL-GRPC 타겟의 경고 제거
    if target.name == 'BoringSSL-GRPC'
      create_symlink_phase = target.shell_script_build_phases.find { |x| x.name == 'Create Symlinks to Header Folders' }
      create_symlink_phase.always_out_of_date = "1"
      target.source_build_phase.files.each do |file|
        if file.settings && file.settings['COMPILER_FLAGS']
          flags = file.settings['COMPILER_FLAGS'].split
          flags.reject! { |flag| flag == '-GCC_WARN_INHIBIT_ALL_WARNINGS' }
          file.settings['COMPILER_FLAGS'] = flags.join(' ')
        end
      end
    end
  end
end

use_frameworks! :linkage => :static
